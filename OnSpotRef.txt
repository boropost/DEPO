quickstart-android/auth/README.md
spotcast-45e35.firebaseapp.com //domain

add anfroid Enter the codelab's package name: com.google.firebase.codelab.friendlychat.

https://developers.facebook.com/  richcluo@gmail.com 
AppId/sec at settings basic
add prod : login, Valid OAuth redirect URIs = https://auth/handler (by  firebase) 
app/src/main/res/values/ids.xml <string name="facebook_app_id">151027222121181</string> 

https://apps.twitter.com/  richcluo@gmail.com
app/src/main/res/values/ids.xml
    <string name="twitter_consumer_key">jf1QXxq65V5gM6sTlJjw5m7Ow</string>
    <string name="twitter_consumer_secret">mPI3b5Yk20woNnta9kwTnIRFVPoykYGgN98k1tpoVeuENXRUcu</string>

build.gradle of top level
buildscript {
    dependencies {
        classpath "com.android.databinding:dataBinder:1.0-rc1"
build.gradle of application level
dependencies {//match proj struct > dependencies
    compile 'com.android.support:recyclerview-v7:23.0.0'
    // Facebook Android SDK (only required for Facebook Login)
    compile 'com.facebook.android:facebook-android-sdk:4.9.0'
    / Twitter Android SDK (only required for Twitter Login)
    compile('com.twitter.sdk.android:twitter-core:1.6.6@aar') {
        transitive = true
    }
    compile('com.twitter.sdk.android:twitter:1.13.1@aar') {
        transitive = true
    }

quickstart-android/auth/app/src/main/AndroidManifest.xml
<activity android:name=".ChooserActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
<activity
            android:name=".FacebookLoginActivity"
ChooserActivity.java
startActivity(new Intent(this, FacebookLoginActivity.class));

quickstart-android/auth/app/src/minSdkJellybean/
FacebookLoginActivity.java : onCreate{setContentView(R.layout.activity_facebook); //bind with activity_facebook.xml
findViewById(R.id.button_facebook_login) //android:id="@+id/button_facebook_login"

mAuth.signInWithEmailAndPassword(email, password)
                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {task.getResult().getUser()
https://developers.google.com/android/reference/com/google/android/gms/tasks/Continuation

quickstart-android/database/app/src/main/res/menu/menu_main.xml
<menu  tools:context=".MainActivity">
    <item
        android:id="@+id/action_logout"
quickstart-android/database/app/src/main/java/com/google/firebase/quickstart/database/MainActivity.java        
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (item.getItemId() == R.id.action_logout) {
            FirebaseAuth.getInstance().signOut();
            startActivity(new Intent(this, SignInActivity.class));
            
https://firebase.google.com/docs/database/admin/retrieve-data            
database/NewPostActivity.java .writeNewPost            
        String key = mDatabase.child("posts").push().getKey(); //get next uid
        Post post = new Post(userId, username, title, body);
        Map<String, Object> postValues = post.toMap(); //post key-value pairs as map 

        Map<String, Object> childUpdates = new HashMap<>();
        childUpdates.put("/posts/" + key, postValues);
        childUpdates.put("/user-posts/" + userId + "/" + key, postValues);

        mDatabase.updateChildren(childUpdates); //update 2 

database/PostDetailActivity.java
    protected void onCreate(Bundle savedInstanceState) {
        setContentView(R.layout.activity_post_detail);//res/layout/activity_post_detail.xml
public void onStart() {
        ValueEventListener postListener = new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                Post post = dataSnapshot.getValue(Post.class); //latest
mPostReference.addValueEventListener(postListener);

    private void postComment() {
        FirebaseDatabase.getInstance().getReference().child("users").child(uid)
                .addListenerForSingleValueEvent(new ValueEventListener() {//stops listening after exec onDataChange, auto remove 
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        User user = dataSnapshot.getValue(User.class);
                        
https://developer.android.com/guide/topics/ui/layout/relative.html
<include
        android:id="@+id/post_text_layout"
        layout="@layout/include_post_text" //reusable layout/include_post_text.xml
        android:layout_below="@+id/post_author_layout"  //related pos to another android:id 
        
https://developer.android.com/guide/topics/ui/layout/recyclerview.html
        mAdapter = new CommentAdapter(this, mCommentsReference);
        mCommentsRecycler.setAdapter(mAdapter);
public CommentAdapter(final Context context, DatabaseReference ref) {
            ChildEventListener childEventListener = new ChildEventListener() {
                @Override
                public void onChildAdded(DataSnapshot dataSnapshot, String previousChildName) { //onChildChanged ...
                Comment comment = dataSnapshot.getValue(Comment.class);
         ref.addChildEventListener(childEventListener);       
<android.support.v7.widget.RecyclerView
tools:listitem="@layout/item_comment" />

fragment has its own layout and lifecycle closely related to the lifecycle of its host activity. add or remove fragments in an activity while the activity is running. fragment can implement a behavior has no user interface (return null from onCreateView)
Activity's onAttachFragment() ->  
Fragment's onCreate(non-graphical initialisations: assign variables, get Intent extras,except access View hierarchy not ready before Activity's onCreate()) ->
Fragment's onCreateView(graphical initialisations and assign View variables). 
Activity's onCreate() ->
Fragment's onActivityCreated() to final initialisations (for example, modifying UI elements).

<FrameLayout tools:context=".MainActivity">
<android.support.v7.widget.RecyclerView 
    android:id="@+id/messages_list"
    tools:listitem="@layout/item_post" />
fragment/PostListFragment.java
public View onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_all_posts, container, false);//res/layout/fragment_all_posts.xml
        mRecycler = (RecyclerView) rootView.findViewById(R.id.messages_list);
public void onActivityCreated((Bundle savedInstanceState) {
        mManager = new LinearLayoutManager(getActivity());//(this, LinearLayoutManager.VERTICAL|HORIZONTAL, false); (reverseLayout)             mManager.setReverseLayout|.setStackFromEnd(true);//displayed new from the bottom
        mRecycler.setLayoutManager(mManager);//LayoutManager for laying out each item in the view specifiying orientation/order
        
        Query postsQuery = getQuery(mDatabase);//databaseReference.child("posts").limitToFirst(100);
        mAdapter = new FirebaseRecyclerAdapter<Post, PostViewHolder>(Post.class, R.layout.item_post,
        PostViewHolder.class, postsQuery) {
            @Override
            protected void populateViewHolder(final PostViewHolder viewHolder, final Post model, final int position) {
                final DatabaseReference postRef = getRef(position);
                final String postKey = postRef.getKey();
                viewHolder.itemView.setOnClickListener(new View.OnClickListener() {//click post item to display detail
                    @Override
                    public void onClick(View v) {
                        Intent intent = new Intent(getActivity(), PostDetailActivity.class);//intent move from one activity to another 
                        intent.putExtra(PostDetailActivity.EXTRA_POST_KEY, postKey); //getIntent().getExtras().getString("AnyKeyName");
                        startActivity(intent);
                 
                viewHolder.bindToPost(model, new View.OnClickListener() {
                    @Override
                    public void onClick(View starView) {
                        DatabaseReference globalPostRef = mDatabase.child("posts").child(postRef.getKey());
                        DatabaseReference userPostRef = mDatabase.child("user-posts").child(model.uid).child(postRef.getKey());
                        onStarClicked(globalPostRef);
                        onStarClicked(userPostRef);
                    }
                }); 
        mRecycler.setAdapter(mAdapter);      
        private void onStarClicked(DatabaseReference postRef) {
        postRef.runTransaction(new Transaction.Handler() {
            @Override
            public Transaction.Result doTransaction(MutableData mutableData) {
                Post p = mutableData.getValue(Post.class);
                if (p.stars.containsKey(getUid())) {//FirebaseAuth.getInstance().getCurrentUser().getUid();
                    p.starCount = p.starCount - 1;
                    p.stars.remove(getUid());
                } else {
                    p.starCount = p.starCount + 1;
                    p.stars.put(getUid(), true);
                }
                mutableData.setValue(p);
                return Transaction.success(mutableData);
            }
            @Override
            public void onComplete(DatabaseError databaseError, boolean b,
                                   DataSnapshot dataSnapshot) {
                Log.d(TAG, "postTransaction:onComplete:" + databaseError);
            }
        });

Firebase ref = new Firebase("https://dinosaur-facts.firebaseio.com/dinosaurs");
Query queryRef = ref.orderByChild("height");

postsQuery.addChildEventListener(new ChildEventListener() {
    @Override
    public void onChildAdded(DataSnapshot snapshot, String previousChild) {
        System.out.println(snapshot.getKey() + " was " + snapshot.getValue().get("height") + " meters tall");
    }
    // ....
});
msgRef.orderByChild("date").endAt(3)
http://cliffordhall.com/2017/04/using-firebase-cloud-functions-manage-compound-key-index/
        
firebase/AndroidChat //old
open-source-android-apps
http://www.parallelcodes.com/android-using-stored-procedure-ms-sql-server/

https://developer.android.com/training/location/retrieve-current.html
https://developer.android.com/guide/topics/location/strategies.html

keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname "CN=Android Debug,O=Android,C=US"
//[Storing C:/Users/holly/.android/debug.keystore]
keytool -exportcert -alias androiddebugkey -keystore ~/.android/debug.keystore -list -v -storepass android 
//Valid from: Sat Jul 08 12:04:40 EDT 2017 until: Fri Oct 06 12:04:40 EDT 2017 SHA1: FB:F1:49:00:44:C9:EF:A9:53:39:72:25:37:5E:34:F0:8C:5F:B5:D3 
shared by many proj debug

download google-services.json and drag to app dir in AV or filesys, 
classpath 'com.google.gms:google-services:3.1.0' to proj level build.gradle
apply plugin: 'com.google.gms.google-services'  to app level build.gradle if not auto added
sync gradle (upgrade if need) then app repoint to src/main dir

enable Virtual T in BIOS, run app first time to start emulator to be connected device, run again to launch app on it.
5:debugger> drag variables to right to view frames/threads as call stack
Log.d(tag, message);//6:Android Monitor>Logcat
V — Verbose (lowest priority)
D — Debug
I — Info
W — Warning
E — Error
A — Assert 
Android Monitor: device being monitored=ADB enabled > memory|cpu|network monitor 
Tools > Android > SDK Manager > SDK platform (android)| tools (emulator,playsvc,google USB driver...) selecct > apply
                > AVD Manager
                >enable ADB int (for run on phone)
        firebase>auth/database         
run> edit config > 
VCS > check out from version control: github
File>Project Structure=>app(i.e left pannel)=>Properties=>SDK loc proj gradle/android version 
app>SDK|Build Tools Version,sign,Flavor default|minSDKJellyBean:min/targetSDK Version 19 (change to 16 =phone), build type:debug|relese dependencies
     Settings > Plugins (built-in Image Asset Studio, Theme and Layout Editor ) >Browse repositories  ADB, Codota
Right-click the res folder and select New > Image Asset (res/mipmap launcher icon, res/drawable other types of icons, can access image from the main thread only.refer to image as @drawable in XML or Drawable in Java)
<ImageView    android:src="@drawable/myimage" />
Resources res = getResources();// Context.getResources class applies to UI objects, such as activities, fragments, layouts, views,
Drawable drawable = res.getDrawable(R.drawable.myimage);
ImageView imageView = (ImageView) findViewById(R.id.myimageview);
imageView.setImageResource(R.drawable.myimage);//reset image
//android.R.layout.xxx standard/system resources @android:color/xxx
getWindow().setBackgroundDrawableResource(R.drawable.my_background_image) ;
setContentView(R.layout.main_screen);
mFlipper.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.hyperspace_in));//view anim (old)
<animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="true"> //drawable anim
    <item android:drawable="@drawable/rocket_thrust1" android:duration="200" />
<EditText id="text"   android:textColor="?android:textColorSecondary" //apply attr:val defined in std android:textColorSecondary style
style="@style/CodeFont" //apply all attr:val defined in CodeFont style
res/values/A theme is styles applied to an entire Activity or app, rather than an individual View
<application android:theme="@style/CustomTheme">//apply to whole app in AndroidManifest.xml 
<activity android:theme="@android:style/Theme.Translucent">//only std theme (tranparent) to the act
<resources>
    <style name="CodeFont" parent="@android:style/TextAppearance.Medium">//<style name="CodeFont.Red.Big"> inheritance Big:Red:CodeFont
        <item name="android:textColor">#00FF00</item>
Build > Select Build Variant from the menu bar (or btn tool window bar to select minSdkJellyBeanDebug vs minSdkIncs
      >rebuild (if unused import) | clean proj
      >sel variant : debug|release
Analyze > dependency | stacktrace  | Inspect Code (Lint find issues such as deprecated elements, or API calls that aren't supported by your target API.)    
run app second time to see app on phone

Enable USB debugging on your device by going to Settings > Developer options
Note: On Android 4.2 and newer, Developer options is hidden by default. To make it available, go to Settings > About phone and tap Build number seven times. Return to the previous screen to find Developer options.
down load OEM USB driver.exe from sumsong ny model from settings
win7 >device mgr> sumsung Android ADB intf> Update Driver Software >Browse Google USB Driver in C:\Users\holly\AppData\Local\Android\sdk\extras\google\usb_driver\. after install google USB driver from SDL mgr

emulator bottom ...>location :GPS point
