quickstart-android/auth/README.md
spotcast-45e35.firebaseapp.com //domain

add anfroid Enter the codelab's package name: com.google.firebase.codelab.friendlychat.

https://firebase.google.com/docs/auth/android/manage-users
firebase user profile photourl phone area store diff from database

https://developers.facebook.com/docs/facebook-login/android/  richcluo@gmail.com  if advance: One account per email address: same eamil can not be used for other auth acct, otherwise email/name left empty for the user in database  
facebook login> get start SDK choose platform > android >[download Facebook SDK] > project structure | new project  : Select API 15/Android 4.0.3
proj build.gradle : repositories {    mavenCentral() //search mavenLocal() on machine  %USER_HOME% or %M2_HOME%\conf\settings.xml then mavenCentral() http://repo1.maven.org/maven2/
app  build.gradle : dependencies {   compile 'com.facebook.android:facebook-android-sdk:[4,5)'
Package:com.google.firebase.quickstart.database
Default Activity:com.google.firebase.quickstart.database.SignInActivity
[Enable Single Sign On]
import com.facebook.FacebookSdk;
import com.facebook.appevents.AppEventsLogger;
layout.xml <com.facebook.login.widget.LoginButton //auto update status 
manifest    
<uses-permission android:name="android.permission.INTERNET"/>
<meta-data  android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/facebook_app_id"
app/src/main/res/values/ids.xml <string name="facebook_app_id">151027222121181</string> //copy ids.xml may to values-w820dp notvalues  
misssing .ApplicationId java.lang.NullPointerException at java.util.concurrent.ConcurrentHashMap.containsKey(ConcurrentHashMap.java:774)
 at com.facebook.internal.Utility.queryAppSettings(Utility.java:822)  
 at com.facebook.login.widget.LoginButton$1.run(LoginButton.java:489)
 
 AppId/sec at settings basic
add prod : login, Valid OAuth redirect URIs = https://auth/handler (from  firebase) 
app domain : database-748b1.firebaseapp.com (from  firebase)//facebook err:Given URL is not allowed by the App config
add platform>web >url :https://database-748b1.firebaseapp.com //match above
keyhash: +/FJAETJ76lTOXIlN1408IxftdM=
//cd ~/.android : keytool -exportcert -alias androiddebugkey -keystore debug.keystore | openssl sha1 -binary | openssl base64
password: android, wont prompt pwd if not at ~/.android, pwd gen diff key, 

https://apps.twitter.com/  richcluo@gmail.com
eanble permissions:Request email addresses from users (must provide Privacy Policy URL n Terms of Service URL) and click generate access token (revoke and regen if changed), Has access to your email address will be on approved list of the app at https://twitter.com/settings/applications forapp user to receive email in FirebaseAuth.getInstance().getCurrentUser().getEmail(), otherwise - stored as email 
app/src/main/res/values/ids.xml
    <string name="twitter_consumer_key">jf1QXxq65V5gM6sTlJjw5m7Ow</string>
    <string name="twitter_consumer_secret">mPI3b5Yk20woNnta9kwTnIRFVPoykYGgN98k1tpoVeuENXRUcu</string>
https://dev.twitter.com/twitterkit/android/installation
proj build.gradle : repositories {  jcenter() 
app build.gradle : dependencies { compile 'com.twitter.sdk.android:twitter:3.0.0'//all
compile 'com.twitter.sdk.android:twitter-core:3.0.0'//login only
import com.twitter.sdk.android.core.Twitter|Core;    
TwitterConfig config = new TwitterConfig.Builder(this)
                .logger(new DefaultLogger(Log.DEBUG))
                .twitterAuthConfig(new TwitterAuthConfig(getString(R.string.twitter_consumer_key),getString(R.string.twitter_consumer_secret)))
                .debug(true)
                .build();
        Twitter.initialize(config); 
        FacebookSdk.sdkInitialize(getApplicationContext());
        //init facebook or twitter before inflate login button constructor know how to connect api
        setContentView(R.layout.activity_sign_in);
com.twitter.sdk.android.core.TwitterCore.getInstance().getSessionManager().getActiveSession().getAuthToken().token|secret; 

keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname "CN=Android Debug,O=Android,C=US"
//[Storing C:/Users/holly/.android/debug.keystore]
keytool -exportcert -alias androiddebugkey -keystore ~/.android/debug.keystore -list -v -storepass android 
//Valid from: Sat Jul 08 12:04:40 EDT 2017 until: Fri Oct 06 12:04:40 EDT 2017 SHA1: FB:F1:49:00:44:C9:EF:A9:53:39:72:25:37:5E:34:F0:8C:5F:B5:D3 
proj settings > add finger print,  per development machines. shared by many proj debug,
Before you publish your app, the release SHA-1 key needs to be uploaded in Project Settings. Each of the apps that users download from the Play Store is signed with the same release key
              > currency / timezone

download google-services.json and drag to app dir in AV or filesys, 
Project-level build.gradle (<project>/build.gradle):
buildscript {
  dependencies {
    // Add this line
    classpath 'com.google.gms:google-services:3.1.0'

App-level build.gradle (<project>/<app-module>/build.gradle):
// Add to the bottom of the file if not auto added
apply plugin: 'com.google.gms.google-services'

sync gradle (upgrade if need) then app repoint to src/main dir

build.gradle of top level
buildscript {
    dependencies {
        classpath "com.android.databinding:dataBinder:1.0-rc1"
build.gradle of application level
dependencies {//match proj struct > dependencies
    compile 'com.android.support:recyclerview-v7:23.0.0'
    // Facebook Android SDK (only required for Facebook Login)
    compile 'com.facebook.android:facebook-android-sdk:4.9.0'
    / Twitter Android SDK (only required for Twitter Login)
    compile('com.twitter.sdk.android:twitter-core:1.6.6@aar') {
        transitive = true
    }
    compile('com.twitter.sdk.android:twitter:1.13.1@aar') {
        transitive = true
    }

skooterapp/app/src/main/AndroidManifest.xml
<activity android:name=".LoadingActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
<activity
            android:name=".MainActivity"
LoadingActivity.java
    protected void onCreate(Bundle savedInstanceState) {
        setContentView(R.layout.activity_loading);//res/layout/activity_loading.xml
startActivity(new Intent(this, MainActivity.class));

getApplicationContext() (lifecycle of current Application:Context) or this (=getContext() life cycle of current activity class : Context) 
Creating New objects: Creating new views(every view needs the context to access the right resources (e.g. the theme, strings etc.), adapters, listeners
TextView tv = new TextView(getContext()); ListAdapter adapter = new SimpleCursorAdapter(getApplicationContext(), ...);
Accessing Standard Common Resources: [intent] Services :Context like LAYOUT_INFLATER_SERVICE, SharedPreferences:
context.getSystemService(LAYOUT_INFLATER_SERVICE) getApplicationContext().getSharedPreferences(name, mode);
Accessing Components Implicitly: Regarding content providers, broadcasts, intent
getApplicationContext().getContentResolver().query(uri, ...);

quickstart-android/auth/app/src/minSdkJellybean/
FacebookLoginActivity.java : onCreate{setContentView(R.layout.activity_facebook); //bind with activity_facebook.xml
findViewById(R.id.button_facebook_login) //android:id="@+id/button_facebook_login"

mAuth.signInWithEmailAndPassword(email, password)
                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {task.getResult().getUser()
https://developers.google.com/android/reference/com/google/android/gms/tasks/Continuation

quickstart-android/database/app/src/main/res/menu/menu_main.xml
<menu  tools:context=".MainActivity">//diff menu per act
    <item
        android:id="@+id/action_logout"
quickstart-android/database/app/src/main/java/com/google/firebase/quickstart/database/MainActivity.java   
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);
    public boolean onOptionsItemSelected(MenuItem item) {
        if (item.getItemId() == R.id.action_logout) {
            FirebaseAuth.getInstance().signOut();
            startActivity(new Intent(this, SignInActivity.class));
activity_main.xml            
   <android.support.design.widget.TabLayout        android:id="@+id/tabs"
   <android.support.v4.view.ViewPager        android:id="@+id/container"        android:layout_below="@id/tabs" />
//TabLayout {ViewPager{FragmentPagerAdapter{Fragment[]{RecentPostsFragment,MyPostsFragment,MyTopPostsFragment}}
        mPagerAdapter = new FragmentPagerAdapter(getSupportFragmentManager()) {
            private final Fragment[] mFragments = new Fragment[] {
                    new RecentPostsFragment(),
                    new MyPostsFragment(),
                    new MyTopPostsFragment(),
            };
        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setAdapter(mPagerAdapter);
        TabLayout tabLayout = (TabLayout) findViewById(R.id.tabs);
        tabLayout.setupWithViewPager(mViewPager)
        findViewById(R.id.fab_new_post).setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {//FloatingActionButton for new post
                startActivity(new Intent(MainActivity.this, NewPostActivity.class));
        
https://firebase.google.com/docs/database/admin/retrieve-data            
database/NewPostActivity.java .writeNewPost            
        String key = mDatabase.child("posts").push().getKey(); //get next uid
        Post post = new Post(userId, username, title, body);
        Map<String, Object> postValues = post.toMap(); //post key-value pairs as map 

        Map<String, Object> childUpdates = new HashMap<>();
        childUpdates.put("/posts/" + key, postValues);
        childUpdates.put("/user-posts/" + userId + "/" + key, postValues);

        mDatabase.updateChildren(childUpdates); //update 2 

database/PostDetailActivity.java
    protected void onCreate(Bundle savedInstanceState) {
        setContentView(R.layout.activity_post_detail);//res/layout/activity_post_detail.xml
public void onStart() {
        ValueEventListener postListener = new ValueEventListener() {
            public void onDataChange(DataSnapshot dataSnapshot) {
                Post post = dataSnapshot.getValue(Post.class); //latest, populate post object from JASON
mPostReference.addValueEventListener(postListener);

    private void postComment() {
        FirebaseDatabase.getInstance().getReference().child("users").child(uid)
                .addListenerForSingleValueEvent(new ValueEventListener() {//stops listening after exec onDataChange, auto remove 
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        User user = dataSnapshot.getValue(User.class);
                        
https://developer.android.com/guide/topics/ui/layout/relative.html
<include
        android:id="@+id/post_text_layout"
        layout="@layout/include_post_text" //reusable layout/include_post_text.xml
        android:layout_below="@+id/post_author_layout"  //related pos to another android:id 
        
https://developer.android.com/guide/topics/ui/layout/recyclerview.html
        mAdapter = new CommentAdapter(this, mCommentsReference);
        mCommentsRecycler.setAdapter(mAdapter);
public CommentAdapter(final Context context, DatabaseReference ref) {
            ChildEventListener childEventListener = new ChildEventListener() {
                public void onChildAdded(DataSnapshot dataSnapshot, String previousChildName) { //onChildChanged ...
                Comment comment = dataSnapshot.getValue(Comment.class);
         ref.addChildEventListener(childEventListener);       
<android.support.v7.widget.RecyclerView
tools:listitem="@layout/item_comment" />

fragment has its own layout and lifecycle closely related to the lifecycle of its host activity. add or remove fragments in an activity while the activity is running. fragment can implement a behavior has no user interface (return null from onCreateView)
Activity's onAttachFragment() ->  
Fragment's onCreate(non-graphical initialisations: assign variables, get Intent extras,except access View hierarchy not ready before Activity's onCreate()) ->
Fragment's onCreateView(graphical initialisations and assign View variables). 
Activity's onCreate() ->
Fragment's onActivityCreated() to final initialisations (for example, modifying UI elements).

<FrameLayout tools:context=".MainActivity">
<android.support.v7.widget.RecyclerView 
    android:id="@+id/messages_list"
    tools:listitem="@layout/item_post" />
//fragment_all_posts.xml {RecyclerView android:id="@+id/messages_list"{ tools:listitem="@layout/item_post" 
//PostViewHolder extends RecyclerView.ViewHolder is item data model with itemtemplate item_post.xml { include_post_author.xml bind to each post
//The populateViewHoldermethod works almost the same as onChildAdded/onChildChanged where it returns each child under a referenced node postsQuery (TODO: extend FirebaseRecyclerAdapter to multiple query[i].addChildEventListener(mListener);).The FirebaseRecyclerAdapter will call our populateViewHolder method for each Post it finds in the database.
//https://github.com/firebase/FirebaseUI-Android/tree/master/database  ??FirebaseIndexRecyclerAdapter
//https://firebaseui.com/docs/android/index.html?com/firebase/ui/FirebaseRecyclerViewAdapter.html update query instead of recreate adapter?? query is immutable can not be updated

https://www.learnhowtoprogram.com/android/gestures-animations-flexible-uis/updating-data-after-gesture-interactions
FirebaseRestaurantListAdapter {
public void onChildAdded(DataSnapshot dataSnapshot, String s) {
                mRestaurants.add(dataSnapshot.getValue(Restaurant.class));
            }
	        Intent intent = new Intent(mContext, RestaurantDetailActivity.class);
                intent.putExtra("position", viewHolder.getAdapterPosition());
                intent.putExtra("restaurants", Parcels.wrap(mRestaurants));
                mContext.startActivity(intent);
		
 RestaurantDetailActivity{ mRestaurants = Parcels.unwrap(getIntent().getParcelableExtra("restaurants"));
 int startingPosition = getIntent().getIntExtra("position", 0);
         adapterViewPager = new RestaurantPagerAdapter(getSupportFragmentManager(), mRestaurants);
        mViewPager.setAdapter(adapterViewPager);
        mViewPager.setCurrentItem(startingPosition);

query.child("0/1300106/81/57").orderByKey().startAt("100").limitToLast(2); //only return immediate child post after max subtree key 99, newer the later, only for query not reference 

public class RecipeAdapter extends FirebaseRecyclerAdapter<RecipeObject, RecipeHolder>{
    private Context context;
    public RecipeAdapter(Class<RecipeObject> modelClass, int modelLayout, Class<RecipeHolder> viewHolderClass, DatabaseReference ref, Context context) {
        super(modelClass, modelLayout, viewHolderClass, ref);
        this.context = context;
    }
    @Override
    protected void populateViewHolder(RecipeHolder viewHolder, RecipeObject model, int position) {
        viewHolder.recipeName.setText(model.getRecipename());
        Glide.with(context).load(model.getRecipeImageUrl()).into(viewHolder.recipeImage);
    }
}
mRecipeAdapter = new RecipeAdapter(RecipeObject.class, R.layout.recipe_category_list, RecipeHolder.class, childRef, getContext());
//mRecyclerView.setAdapter(mFirebaseRecyclerAdapter); mFirebaseRecyclerAdapter.notifyDataSetChanged(); //refresh RecyclerView
//https://litotom.com/2016/08/29/firephoto-recyclerview-storage/
//https://www.codementor.io/tips/1237823034/how-to-filter-a-recyclerview-with-a-searchview

fragment/PostListFragment.java vs https://github.com/prathmeshranaut/skooterapp/blob/master/app/src/main/java/com/skooterapp/PostAdapter.java
public View onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_all_posts, container, false);//res/layout/fragment_all_posts.xml
        mRecycler = (RecyclerView) rootView.findViewById(R.id.messages_list);
public void onActivityCreated((Bundle savedInstanceState) {
        mManager = new LinearLayoutManager(getActivity());//(this, LinearLayoutManager.VERTICAL|HORIZONTAL, false); (reverseLayout)             mManager.setReverseLayout|.setStackFromEnd(true);//displayed new from the bottom
        mRecycler.setLayoutManager(mManager);//LayoutManager for laying out each item in the view specifiying orientation/order
        
        Query postsQuery = getQuery(mDatabase);//databaseReference.child("posts").limitToFirst(100);
        mAdapter = new FirebaseRecyclerAdapter<Post, PostViewHolder>(Post.class, R.layout.item_post,
        PostViewHolder.class, postsQuery) {

            protected void populateViewHolder(final PostViewHolder viewHolder, final Post model, final int position) {
                final DatabaseReference postRef = getRef(position); //get Ref on index of returned post
                final String postKey = postRef.getKey();
                viewHolder.itemView.setOnClickListener(new View.OnClickListener() {//click post item to display detail
                    public void onClick(View v) {
                        Intent intent = new Intent(getActivity(), PostDetailActivity.class);//intent move from one activity to another 
                        intent.putExtra(PostDetailActivity.EXTRA_POST_KEY, postKey); //getIntent().getExtras().getString("AnyKeyName");
                        startActivity(intent);
                //set each field in PostViewHolder to field in returned post (model) viewHolder.titleView.setText(post.title);
                viewHolder.bindToPost(model, new View.OnClickListener() {//click star button
                    public void onClick(View starView) {
                        DatabaseReference globalPostRef = mDatabase.child("posts").child(postRef.getKey());
                        DatabaseReference userPostRef = mDatabase.child("user-posts").child(model.uid).child(postRef.getKey());
                        onStarClicked(globalPostRef);
                        onStarClicked(userPostRef);
                    }
                }); 
        mRecycler.setAdapter(mAdapter);      
        private void onStarClicked(DatabaseReference postRef) {
        postRef.runTransaction(new Transaction.Handler() {
            public Transaction.Result doTransaction(MutableData mutableData) {
                Post p = mutableData.getValue(Post.class);
                if (p.stars.containsKey(getUid())) {//FirebaseAuth.getInstance().getCurrentUser().getUid();
                    p.starCount = p.starCount - 1;
                    p.stars.remove(getUid());
                } else {
                    p.starCount = p.starCount + 1;
                    p.stars.put(getUid(), true);
                }
                mutableData.setValue(p);
                return Transaction.success(mutableData);
            }
            public void onComplete(DatabaseError databaseError, boolean b,
                                   DataSnapshot dataSnapshot) {
                Log.d(TAG, "postTransaction:onComplete:" + databaseError);
            }
        });
@Override
protected void onDestroy() {
    super.onDestroy();
    mAdapter.cleanup();
}
skooterapp/common/view/SlidingTabLayout.java //constant feedback as to * the user's scroll progress.
skooterapp/AppController.java{ com.android.volley.RequestQueue; //asynchronous RESTful HTTP requests, no need if use firebase 


Firebase end node must name:val, mid node name(key) must be unique, must have at least 1 leaf (value) node to save all super (name) nodes, click parent node to its detail page to del/modify child (type in value not name and return) wont impact upper nodes, export/import override all children under parent/root (exclude parent) to db-root-export file
Firebase ref = new Firebase("https://dinosaur-facts.firebaseio.com/dinosaurs");
Query queryRef = ref.orderByChild("height");

postsQuery.addChildEventListener(new ChildEventListener() {
    public void onChildAdded(DataSnapshot snapshot, String previousChild) {
        System.out.println(snapshot.getKey() + " was " + snapshot.getValue().get("height") + " meters tall");
    }
    // ....
});
msgRef.orderByChild("date").endAt(3)
http://cliffordhall.com/2017/04/using-firebase-cloud-functions-manage-compound-key-index/

Firebase ref = new Firebase("https://<YOUR-FIREBASE-APP>.firebaseio.com");
Firebase newPostRef = ref.child("posts").push();
String newPostKey = newPostRef.getKey();
Map newPost = new HashMap();
newPost.put("title", "New Post");
newPost.put("content", "Here is my new post!");
Map updatedUserData = new HashMap();
updatedUserData.put("users/posts/" + newPostKey, true);
updatedUserData.put("posts/" + newPostKey, newPost);
// Do a deep-path update
ref.updateChildren(updatedUserData, new Firebase.CompletionListener() {
   @Override
   public void onComplete(FirebaseError firebaseError, Firebase firebase) {
       if (firebaseError != null) {
           System.out.println("Error updating data: " + firebaseError.getMessage());
       }
   }
});

DatabaseReference extends Query extends Object
Query.equalTo, orderByChild(String path)|Key|value() also in dbRef js, limitToFirst|last  start|endAt getRef() need order, keepSynced(auto download),  add|removeChild|ValueEventListener|addListenerForSingleValueEvent 
DatabaseReference.setValu,e push, getKey(), child(String pathString) getParent|root() return DatabaseReference, updateChildren(Map), removeValue(), runTransaction
string,double,long,Boolean, Map<String, Object>, List<Object>

https://firebase.googleblog.com/2013/10/queries-part-1-common-sql-queries.html 
".read": "auth == null",test simulator turn off auth
or enable firebase anonymous auth, rules ".read": "auth != null", test simulator turn on auth select anonymous provider which gen anonymous auth token
https://jsfiddle.net/katowulf/eypydqjn/ (external resources + https://www.gstatic.com/firebasejs/3.6.5/firebase.js) Auth API Key=firebase setting:Web API Key
 url=database-1ab1b Path=latitudes/-77/38/8/9/7
https://database-1ab1b.firebaseio.com/latitudes/-77/38/8/9/7.json?print=pretty //CURL request
<div id="result"></div>//html or settting jQuery edge + firebug
let config = {
  "apiKey": "AIzaSyAMs6eu3EO0z_PJ-TwA8ctI7-KBXEVJgHg",
  "authDomain": "database-1ab1b.firebaseapp.com",
  "databaseURL": "https://database-1ab1b.firebaseio.com"
};
firebase.initializeApp(config);
let db = firebase.database().ref();
let query = db.child("latitudes/-77/38/8/9/7/1");
query.once('value').then(snap => {	
	snap.forEach(function(data) {
		var uids=JSON.stringify(data.val()); 
		var beg=0;
		var pos=0;
   	whle(true){//parse leaf xxx from "xxx":uid" from high level node latitudes/-77/38/8/9
    	pos=uids.indexOf('":uid"',pos); //search after prev pos 
    	if(pos>0){
      	if(beg==0){ //only for the first uid
        	beg=pos-1;
      		while(beg>0 && uids.charAt(beg)!='"'){//prev "
          	beg--;
          }
        }
      	if(beg>0){//only if has prev "
          $("#result").append('<p>' + uids.substring(beg+1,pos) + '</p>');
        }
      	pos+=8;
            beg=pos;
      	while(uids.charAt(beg)!='"'){//next "
        	beg++;
        }
      } else break;
		} 
  });
}).catch(e => console.log(e)); //same as .then(function(snap) {

let query = db.child("users/nNosBR5IaoXNnSsubByOnM1BIgM2/posts/1");
query.once('value').then(snap => {	
  snap.forEach(function(data) {  
    var post= data.val();//get obj from uniquekey{object} exclude uniquekey
    $("#result").append('<p>' + post.body + '</p>'); 	
    $("#result").append('<p>' + JSON.stringify(data.child("body").val()|key) + '</p>');
    $("#result").append('<p>' + data.child("to").numChildren()+ '</p>');
    data.child("re").forEach(function(dt) {
    	var re=dt.val();
    	$("#result").append('<p>' + re.text + '</p>');
    });
    data.child("to").forEach(function(dt) {
    	$("#result").append('<p>' + dt.key + '</p>');
    });
  });
});	

query.orderByValue().limitToLast(2).on("value", function(snapshot) {
  snapshot.forEach(function(data) {
            //data.ref().child("next").on(...);  ??recusive
  	console.log(data.key + "|" + JSON.stringify(data.val(), null, 2));//JSON.parse|stringify() de|serializes a JS object from to a JSON string.
  });
});
query.orderByValue().equalTo(1).once('value', function(snapshot) {//or equalTo("uid") dep on orderBy}

var postRef = query[.child(2)].push(); //add a new empty child with name=uniqueId [create/locate node 2 if not/ exist}
postRef.set({//set overwrite all at current ref, while update change existing value based on key
  'title': 'tt',
  'body': 'tb'
});
transaction() is used to modify the existing value to a new value, ensuring there are no conflicts with other clients writing to the same location at the same time.

query.on("child_added", function(snapshot) {//return each existing child at first and trigger upon new 
  var post = snapshot.val();
  $("#result").append('<p>' + post.body + '</p>');
});

compile 'com.google.firebase:firebase-storage:11.0.2' not 11.2.0 as doc to sync with database 11.0.2, otherwise Found com.google.firebase:firebase-storage:11.2.0, but version 11.0.2 is needed for the google-services plugin 
storage: files{bucket gs://database-1ab1b.appspot.com, +folder images} | rules{ request.auth 1= null }
var config = {
  apiKey: "AIzaSyAMs6eu3EO0z_PJ-TwA8ctI7-KBXEVJgHg",
  authDomain: "database-1ab1b.firebaseapp.com",
  databaseURL: "https://database-1ab1b.firebaseio.com",
  storageBucket: "gs://database-1ab1b.appspot.com"
};
firebase.initializeApp(config);

var storageRef = firebase.storage().ref();
var imagesRef = storageRef.child('images');
var fileName = 'RQL.png';
var spaceRef = imagesRef.child(fileName);
imgRef.getDownloadURL().then(function(url) {
	$("#result").append('<p>' + url + '</p>');
}).catch(function(error) {
    switch (error.code) {
    case 'storage/object_not_found':
    case 'storage/unauthorized':
    case 'storage/canceled':
    case 'storage/unknown': //Unknown error 
      break;
  }
});

https://github.com/codepath/android_guides/wiki/Displaying-Images-with-the-Glide-Library
http://bumptech.github.io/glide/doc/migrating.html
http://bumptech.github.io/glide/javadocs/400/com/bumptech/glide/request/RequestOptions.html

cloud functions
ref("posts/{Id}")  wildcards matches  /posts/1 or /posts/2, invocation ret event.params.1|2
Path match all events (onwrite|create|update|delete) that happen anywhere below it.

https://developer.android.com/training/location/retrieve-current.html
https://developer.android.com/guide/topics/location/strategies.html //android.location.LocationManager 
https://developer.android.com/training/location/retrieve-current.html //FusedLocationProviderClient depend on Google Play Services SDK  AV SDK Manager: click SDK Tools, expand Support Repo, select Google Repository    dependencies { compile 'com.google.android.gms:play-services:11.0.2'    }//device that runs Android 4.0 or higher and includes Google Play Store.
https://github.com/googlesamples/android-play-location/tree/master/BasicLocationSample
https://github.com/googlesamples/android-play-location/tree/master/LocationUpdates
request the user's permission by declaring either the 
ACCESS_COARSE_LOCATION NETWORK_PROVIDER (street block level)
or ACCESS_FINE_LOCATION NETWORK_PROVIDER and GPS_PROVIDER
<manifest ... >
    <uses-permission android:name="android.permission.ACCESS_COARSE|FINE_LOCATION" />    
    <uses-feature android:name="android.hardware.location.network|gps" /><!-- app targets Android 5.0 (API level 21) or higher. -->
LocationManager locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
String locationProvider = LocationManager.NETWORK_PROVIDER;//LocationManager.GPS_PROVIDER
Location lastKnownLocation = locationManager.getLastKnownLocation(locationProvider);
LocationListener locationListener = new LocationListener() {
    public void onLocationChanged(Location location) {
      // Called when a new location is found by the network location provider.
      makeUseOfNewLocation(location);
    }

    public void onStatusChanged(String provider, int status, Bundle extras) {}

    public void onProviderEnabled(String provider) {}

    public void onProviderDisabled(String provider) {}
  };
locationManager.requestLocationUpdates(locationListener, 0, 0, locationListener);  
locationManager.removeUpdates(locationListener);

Latitudes [-90,90]. Longitudes [-180,180]  http://andrew.hedges.name/experiments/haversine/
110km|70ml/1 (max scope:50km|30ml) avg metro size 15-25ml
11km|7ml /0.1 (max scope:5km|3ml) 
1.1km|0.7ml /0.01 (medium)
0.1km(100m)|0.05ml(300ft) /0.001 (near)
0.01km(10m)|0.005ml(30ft) /0.0001 (close)
0.001km(1m)|0.001ml(4ft) /0.00001
(38.898556 -77.037852)
(38.897147 -77.043934)
latitudes> -77> 38> 8> 9> 8> 5> "nNosBR5IaoXNnSsubByOnM1BIgM2":2
                          7> 1> "14ytGxFYAOdnUP8wrzdwOz03mGw1":0  
                              > "OmYPbTLDq1TOt4GZnUHbKS2G5S92":1
//if key<=1 val() render it as array [null,{ "14ytGxFYAO... instead of  {1:{ "14ytGxFYAO...                               
longitudes> 38> -77> 0> 3> 7> 8> "OmYPbTLDq1TOt4GZnUHbKS2G5S92":1
                        4> 3> 8> "14ytGxFYAOdnUP8wrzdwOz03mGw1":0
                              9> "nNosBR5IaoXNnSsubByOnM1BIgM2":2
 [-90,90] +90 to [0,180], [-180,180]  +180 to [0,360], 
 38 to 128, -77 to 103 after before calc distance only for storing
 12210 = 12,210 or 122,10 so 12 0 210, 10,10=10 0 010  {(lat+90)10000+(lgt+180)}
 (38.898556 -77.037852) 1280103/80/93/87/58
 (38.897147 -77.043934) 1280103/80/94/73/19
mDatabase.child("latitudes").child(-77).child(38).child(8).child(9).child(8).child(5).setValue(user); 
latitudes/-77/38/8/9/7
longitudes/38/-77/0/4/3

user-cast for mycast to listen, order by date for clean up (path to copy on loactions) on regular basis by cloud function
locations/path/type(101/2/3/4) for pub on sender loc and sub to listen on the node and below, uid for recast to update user-cast copy 
                    
firebase/AndroidChat //old
open-source-android-apps
http://www.parallelcodes.com/android-using-stored-procedure-ms-sql-server/

enable Virtual T in BIOS, run app first time to start emulator to be connected device, run again to launch app on it.
5:debugger> drag variables to right to view frames/threads as call stack
Log.d(tag, message);//6:Android Monitor>Logcat
V — Verbose (lowest priority)
D — Debug
I — Info
W — Warning
E — Error
A — Assert 
Android Monitor: device being monitored=ADB enabled > memory|cpu|network monitor 
Tools > Android > SDK Manager > SDK platform (android)| tools (emulator,playsvc,google USB driver...) selecct > apply
                > AVD Manager
                >enable ADB int (for run on phone)
        firebase>auth/database         
run> edit config > 
VCS > check out from version control: github
File>Project Structure=>app(i.e left pannel)=>Properties=>SDK loc proj gradle/android version 
app>SDK|Build Tools Version,sign,Flavor default|minSDKJellyBean:min/targetSDK Version 19 (change to 16 =phone), build type:debug|relese dependencies
     Settings > Build, Execution, Deployment > disable "Instant Run" if  “Unable to get provider com.google.firebase.provider.FirebaseInitProvider” Error 
              > Plugins (built-in Image Asset Studio, Theme and Layout Editor ) >Browse repositories  ADB(android cmd), Codota
Right-click the res folder and select New > Image Asset (res/mipmap launcher icon, res/drawable/x|m|hdpi/(copy same img each has diff size, auto group on AS) other types of icons, can access image from the main thread only.refer to image as @drawable in XML or Drawable in Java)
new value res file: ints|bools|arrays.xml (file name doesnot matter) <res> <integer|bool|array name="location_size">4</integer>  ref by attr name "@integer|bool|array/location_size" or R.integer|bool|array.location_size 
<ImageView    android:src="@drawable/myimage" />
Resources res = getResources();// Context.getResources class applies to UI objects, such as activities, fragments, layouts, views,
Drawable drawable = res.getDrawable(R.drawable.myimage);
ImageView imageView = (ImageView) findViewById(R.id.myimageview);
imageView.setImageResource(R.drawable.myimage);//reset image
//android.R.layout.xxx standard/system resources @android:color/xxx
getWindow().setBackgroundDrawableResource(R.drawable.my_background_image) ;
setContentView(R.layout.main_screen);
mFlipper.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.hyperspace_in));//view anim (old)
add a drwwable resource file (xml) under res/drawable, 360x96/72 to get size for 72 
<animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="true"> //drawable anim
    <item android:drawable="@drawable/rocket_thrust1" android:duration="200" />
<EditText id="text"   android:textColor="?android:textColorSecondary" //apply attr:val defined in std android:textColorSecondary style
style="@style/CodeFont" //apply all attr:val defined in CodeFont style
res/values/A theme is styles applied to an entire Activity or app, rather than an individual View
<application android:theme="@style/CustomTheme">//apply to whole app in AndroidManifest.xml 
<activity android:theme="@android:style/Theme.Translucent">//only std theme (tranparent) to the act
<resources>
    <style name="CodeFont" parent="@android:style/TextAppearance.Medium">//<style name="CodeFont.Red.Big"> inheritance Big:Red:CodeFont
        <item name="android:textColor">#00FF00</item>
Build > Select Build Variant from the menu bar (or btn tool window bar to select minSdkJellyBeanDebug vs minSdkIncs
      >rebuild (if unused import) = clean (if cant resolve R, INSTALL_FAILED_INVALID_APK) + make proj
      >sel variant : debug|release
Analyze > dependency | stacktrace  | Inspect Code (Lint find issues such as deprecated elements, or API calls that aren't supported by your target API.)    
run app second time to see app on phone

clean C:\Users\holly\.android\build-cache and rebuild proj if err after rename layout element 

Enable USB debugging on your device by going to Settings > Developer options
Note: On Android 4.2 and newer, Developer options is hidden by default. To make it available, go to Settings > About phone and tap Build number seven times. Return to the previous screen to find Developer options. enable debug when USB disconnected
down load OEM USB driver.exe from sumsong ny model from settings
win7 >device mgr> sumsung Android ADB intf> Update Driver Software >Browse Google USB Driver in C:\Users\holly\AppData\Local\Android\sdk\extras\google\usb_driver\. after install google USB driver from SDL mgr

emulator bottom ...>location :GPS point

string mem = chars X 2 + 38 pad to 8s
3|4|5 X 2 + 38 = 44|46|48 pad 4|2|0 to 48
6|7|8|9 X 2 + 38 = 50|52|54|56  pad 6|4|2|0 to 56
post.from|text|image|favCt|vetCt|reCt
user.uname

https://guides.codepath.com/android/Defining-The-ActionBar

<activity android:name=".MyActivity"
              android:label="My Activity">
        <intent-filter>
            <action android:name="net.learn2develop.MYACTIVITY" />
            <category android:name="android.intent.category.DEFAULT" />
	    
https://developer.android.com/guide/topics/providers/document-provider.html#client	
http://www.appstoremarketresearch.com/articles/android-tutorial-startActivityForResult/
https://github.com/coomar2841/android-multipicker-library
